version: "2"
services:
  rabbitmq:
    build: .docker/rabbitmq
    hostname: recia-notification-poc-1
    ports:
      - 15671:15671
      - 15672:15672
      - 15674:15674
      - 25672:25672
      - 4369:4369
      - 5671:5671
      - 5672:5672
    volumes:
      - "rabbitmq:/var/lib/rabbitmq"
      - "rabbitmq-plugins:/usr/lib/rabbitmq/lib/rabbitmq_server-3.6.14/plugins"
      - "rabbitmq-configuration:/etc/rabbitmq"
  node:
    build:
      context: .docker/node
      args:
        - GROUP_ID=${GROUP_ID}
        - USER_ID=${USER_ID}
    working_dir: /app
    volumes:
      - .:/home/node/app
      - node-cache:/.cache
  elasticsearch:
    build:
      context: .docker/elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - .docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
  logstash:
    build:
      context: .docker/logstash
      args:
        - GROUP_ID=${GROUP_ID}
        - USER_ID=${USER_ID}
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - .docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - .docker/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: .docker/kibana
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - .docker/kibana/config/:/usr/share/kibana/config
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  rabbitmq: ~
  rabbitmq-plugins: ~
  rabbitmq-configuration: ~
  node-cache: ~
  elasticsearch: ~